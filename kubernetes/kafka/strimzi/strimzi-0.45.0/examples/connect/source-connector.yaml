# To use the KafkaConnector resource, you have to first enable the connector operator using
# the strimzi.io/use-connector-resources annotation on the KafkaConnect custom resource.
# From Apache Kafka 3.1.1 and 3.2.0, you also have to add the FileStreamSourceConnector
# connector to the container image. You can do that using the kafka-connect-build.yaml example.
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: mqtt-source
  labels:
    # The strimzi.io/cluster label identifies the KafkaConnect instance
    # in which to create this connector. That KafkaConnect instance
    # must have the strimzi.io/use-connector-resources annotation
    # set to true.
    strimzi.io/cluster: my-connect-cluster
spec:
  class: io.lenses.streamreactor.connect.mqtt.source.MqttSourceConnector
  tasksMax: 1
  config:
    mqtt.server.uri: "tcp://mosquitto-service.sensors.svc:1883"
    mqtt.topics: "iot-frames"
    mqtt.qos: 1
    kafka.topic: "iot-frames"
    connect.mqtt.kcql: INSERT INTO mqtt SELECT * FROM /mjson WITHCONVERTER=`io.lenses.streamreactor.connect.converters.source.JsonSimpleConverter`
    connect.mqtt.client.id: dm_source_id
    connect.mqtt.hosts: "tcp://mosquitto-service.sensors.svc:1883"
    value.converter: "org.apache.kafka.connect.converters.ByteArrayConverter"
    key.converter: "org.apache.kafka.connect.json.JsonConverter"
    key.converter.schemas.enable: false
    converter.encoding: "UTF-8"
    value.converter.schemas.enable: false
    confluent.topic.bootstrap.servers: "kafka:9092"
    confluent.topic.replication.factor: 1
    transforms: "createMap,createKey,extractString"
    transforms.createMap.type: "org.apache.kafka.connect.transforms.HoistField$Value"
    transforms.createMap.field: "id"
    transforms.createKey.type: "org.apache.kafka.connect.transforms.ValueToKey"
    transforms.createKey.fields: "id"
    transforms.extractString.type: "org.apache.kafka.connect.transforms.ExtractField$Value"
    transforms.extractString.field: "id"

  